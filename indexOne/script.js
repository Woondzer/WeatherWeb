// template literal &{} kommer var anv√§ndbart kolla upp 
var todayWeather = document.querySelector('.today-Weather')
var todayTemp = document.querySelector('.today-Temp')

const weatherCodeMap = {
    0: "‚òÄÔ∏è",
    1: "üå§Ô∏è",
    2: "‚õÖ",
    3: "‚òÅÔ∏è",
    45: "üå´Ô∏è",
    48: "üå´Ô∏è",
    51: "üåßÔ∏è",
    61: "üå¶Ô∏è",
    63: "üåßÔ∏è",
    71: "‚ùÑÔ∏è",
    95: "‚õàÔ∏è"
  };


//this link is for stockholm, it should be based on the location the user is on. 
fetch('https://api.open-meteo.com/v1/forecast?latitude=59.3294&longitude=18.0687&current=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,rain,showers,snowfall,weather_code,wind_speed_10m,wind_direction_10m&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,rain,snowfall,weather_code,wind_speed_10m,wind_direction_10m&timezone=Europe%2FBerlin&models=metno_seamless')
 .then(response => response.json())
 .then(data => {
    console.log(data)

    var weatherCode = data['current']['weather_code']; 
    var todayTempValue = data['current']['temperature_2m']

    var todayWeatherValue = weatherCodeMap[weatherCode];


    todayWeather.innerHTML = `${todayTempValue}¬∞C ${todayWeatherValue}`;

    console.log(todayTemp)
 })
 
 .catch(error => console.error('Error', error));


//  document.getElementById("latitude-paragraph").innerText=apidata.latitude
//    detta kan l√§ggas in mellan data => { } f√∂r att visa latitude i text. 

// om du vill f√• ut typ latitude
// s√• skriver du data.latitude
// och kan spara det i en variabel eller vad du vill
// let latitude = data.latitude

// g√∂r en paragraf i html
// med ett id
// typ id="latitude-paragraph"
// sen i js skriver du
// document.getElementById("latitude-paragraph").innerText = data.latitude 
// eller n√•t i den stilen